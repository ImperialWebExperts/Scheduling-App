generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Business {
  id             String       @id @default(cuid())
  name           String
  ownerEmail     String       @unique
  bookingSlug    String       @unique
  createdAt      DateTime     @default(now())
  services       Service[]
  appointments   Appointment[]
  availability   Availability[]
  settings       Settings?
}

model Service {
  id          String   @id @default(cuid())
  name        String
  description String?
  durationMin Int
  price       Float
  business    Business @relation(fields: [businessId], references: [id])
  businessId  String
  appointmentServices AppointmentService[]
}

model Appointment {
  id           String   @id @default(cuid())
  createdAt    DateTime @default(now())
  date         DateTime // start time
  durationMin  Int      // total duration for all services
  clientName   String
  clientEmail  String
  clientPhone  String
  status       AppointmentStatus @default(SCHEDULED)
  notes        String?

  business     Business @relation(fields: [businessId], references: [id])
  businessId   String
  
  // New: Many-to-many relationship with services
  appointmentServices AppointmentService[]
}

// Junction table for many-to-many relationship between appointments and services
model AppointmentService {
  id            String      @id @default(cuid())
  appointment   Appointment @relation(fields: [appointmentId], references: [id])
  appointmentId String
  service       Service     @relation(fields: [serviceId], references: [id])
  serviceId     String
  
  @@unique([appointmentId, serviceId])
}

model Availability {
  id          String   @id @default(cuid())
  dayOfWeek   Int      // 0 = Sunday, 6 = Saturday
  startTime   String   // "09:00"
  endTime     String   // "17:30"
  business    Business @relation(fields: [businessId], references: [id])
  businessId  String
}

model Settings {
  id              String   @id @default(cuid())
  bufferMinutes   Int      @default(15)     // gap between appointments
  maxAdvanceDays  Int      @default(30)     // how far in advance can book
  business        Business @relation(fields: [businessId], references: [id])
  businessId      String   @unique
}

// Optional: for better UX and logic
enum AppointmentStatus {
  SCHEDULED
  COMPLETED
  CANCELED
  NO_SHOW
}